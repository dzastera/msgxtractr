// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// is_rtf
bool is_rtf(RawVector v);
RcppExport SEXP _msgxtractr_is_rtf(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(is_rtf(v));
    return rcpp_result_gen;
END_RCPP
}
// decode_rtf
RawVector decode_rtf(RawVector v);
RcppExport SEXP _msgxtractr_decode_rtf(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RawVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(decode_rtf(v));
    return rcpp_result_gen;
END_RCPP
}
// int_read_msg
List int_read_msg(std::string path);
RcppExport SEXP _msgxtractr_int_read_msg(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(int_read_msg(path));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_msgxtractr_is_rtf", (DL_FUNC) &_msgxtractr_is_rtf, 1},
    {"_msgxtractr_decode_rtf", (DL_FUNC) &_msgxtractr_decode_rtf, 1},
    {"_msgxtractr_int_read_msg", (DL_FUNC) &_msgxtractr_int_read_msg, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_msgxtractr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
